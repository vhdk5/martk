WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.210
在这些数据中 同一家公司至少有两行数据

00:00:06.210 --> 00:00:08.880
即第 1 年和第 2 年的数据

00:00:08.880 --> 00:00:14.850
所以 我们不能只用包含一个匹配标准的 Match 函数

00:00:14.850 --> 00:00:16.665
因为 这样就无法

00:00:16.665 --> 00:00:21.875
同时匹配股票代码和第 1 年这两个标准

00:00:21.875 --> 00:00:25.940
所以 在这种情况下 我们就要使用包含两个匹配标准的 Match 函数

00:00:25.940 --> 00:00:31.620
在 Excel 中使用此类 Match 函数时 需要运用布尔逻辑

00:00:31.620 --> 00:00:34.760
如果你熟悉布尔逻辑 就很好理解了

00:00:34.760 --> 00:00:37.674
运用布尔逻辑

00:00:37.674 --> 00:00:42.260
就是当特定条件为真 则规定变量为 1

00:00:42.260 --> 00:00:47.615
如果不符合条件 则规定变量为 0

00:00:47.615 --> 00:00:50.090
首先 我们需要理清本例的布尔逻辑

00:00:50.090 --> 00:00:56.700
股票代码 AVGO 在第 1 格和第 2 格为真

00:00:56.700 --> 00:01:03.665
对应股票代码一列中的股票代码 AVGO

00:01:03.665 --> 00:01:10.070
而第 1 年的值分别在

00:01:10.070 --> 00:01:13.095
第 1、3、5、8 行为真

00:01:13.095 --> 00:01:18.270
我们希望同时满足股票代码 AVGO 以及第 1 年均为真

00:01:18.270 --> 00:01:24.625
所以 只有第 1 行的值

00:01:24.625 --> 00:01:28.360
同时满足这两个条件

00:01:28.360 --> 00:01:35.530
我在这个区域标注了这两个条件的真与假 第一列中这两个值为真

00:01:35.530 --> 00:01:39.535
而第二列中这些值均为真

00:01:39.535 --> 00:01:45.505
但是只有在第一行 这两个条件同时为真

00:01:45.505 --> 00:01:52.945
这就是我们想要提取的第 1 年数据

00:01:52.945 --> 00:01:54.470
而当满足第 2 年的条件时

00:01:54.470 --> 00:01:56.400
则提取值到这一格

00:01:56.400 --> 00:02:01.810
我们想做的是 当值为 1 时匹配条件

00:02:01.810 --> 00:02:05.440
那就要同时满足

00:02:05.440 --> 00:02:07.195
第一个条件为股票代码 AVGO

00:02:07.195 --> 00:02:09.345
也就是第 1 行

00:02:09.345 --> 00:02:13.670
以及满足第二个条件 取第 1 年的值

00:02:13.670 --> 00:02:17.510
只有当两个条件同时为 1

00:02:17.510 --> 00:02:21.140
完全满足整个条件

00:02:21.140 --> 00:02:25.440
也就是这个函数中的查询方式为 0 时 返回相对位置

00:02:25.440 --> 00:02:27.495
这个 Match 函数

00:02:27.495 --> 00:02:29.385
所返回的值是 1

00:02:29.385 --> 00:02:35.210
现在 我们要把这个具体值嵌入到 index 函数

00:02:35.210 --> 00:02:43.110
比如这里 当行号为 1 时 从营收成本的范围中提取对应的营收成本

00:02:43.110 --> 00:02:45.695
我们来仔细看一下

00:02:45.695 --> 00:02:47.945
把函数公式放在这里

00:02:47.945 --> 00:02:51.520
供你参考

00:02:51.520 --> 00:02:57.240
如果这两个条件均为真

00:02:57.240 --> 00:03:02.115
Excel 后台就会开始进行计算

00:03:02.115 --> 00:03:07.070
按照布尔逻辑 当 H1 等于股票代码 (ticker symbol)

00:03:07.070 --> 00:03:12.155
且年份为真

00:03:12.155 --> 00:03:16.400
则将两个条件的布尔逻辑相乘

00:03:16.400 --> 00:03:21.885
当条件为真时值为 1 而条件不符合时值为 0

00:03:21.885 --> 00:03:25.215
两个条件相乘之后

00:03:25.215 --> 00:03:30.225
得出的最后范围是这样的

00:03:30.225 --> 00:03:31.770
可以看到

00:03:31.770 --> 00:03:36.965
1 在第一个位置完全匹配这个条件

00:03:36.965 --> 00:03:40.520
因此返回的数字是 1

00:03:40.520 --> 00:03:45.980
这样就提取出总收入的值

00:03:45.980 --> 00:03:49.550
所有其他单元格同理操作

00:03:49.550 --> 00:03:53.045
手动输入函数公式

00:03:53.045 --> 00:03:54.650
对于总收入的范围

00:03:54.650 --> 00:04:00.110
匹配股票代码和 F6 单元格的年份

00:04:00.110 --> 00:04:03.770
满足这些条件时 提取总收入的值

00:04:03.770 --> 00:04:05.690
这样 表格就做好了

00:04:05.690 --> 00:04:09.650
这个表格还有交互性

00:04:09.650 --> 00:04:13.960
因为 股票代码改变 相应的值就会随之改变

00:04:13.960 --> 00:04:18.705
我们发现 第 3 年的数据显示为无效 (N/A)

00:04:18.705 --> 00:04:20.940
这是因为 在实际数据中

00:04:20.940 --> 00:04:26.285
只有股票代码 HPE 有第 3 年数据

00:04:26.285 --> 00:04:30.160
如果把股票代码换成 HPE

00:04:30.160 --> 00:04:32.865
所有的值就都能够正常显示

00:04:32.865 --> 00:04:36.930
关于如何用 Index 函数和 Match 函数将数据提取到表格中 我们就说到这里

